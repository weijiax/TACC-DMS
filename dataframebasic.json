{"paragraphs":[{"title":"DataFrame Basic","text":"%spark\n//loading file from local file system\nval df=spark.read.format(\"csv\")\n            .option(\"header\", true)\n            .load(\"file:////work/00791/xwj/DMS/R-training/RDataMining/mtcars.csv\")\n//loading file from hdfs file system \nval df2=spark.read.format(\"csv\")\n            .option(\"header\", true)\n            .load(\"/tmp/data/mtcars.csv\")            \ndf.show()\ndf.printSchema\ndf.describe().show\ndf.describe(\"mpg\").show","user":"xwj","dateUpdated":"2017-05-04T14:47:08-0500","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true,"editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ndf: org.apache.spark.sql.DataFrame = [model: string, mpg: string ... 10 more fields]\n\ndf2: org.apache.spark.sql.DataFrame = [model: string, mpg: string ... 10 more fields]\n+-------------------+----+---+-----+---+----+-----+-----+---+---+----+----+\n|              model| mpg|cyl| disp| hp|drat|   wt| qsec| vs| am|gear|carb|\n+-------------------+----+---+-----+---+----+-----+-----+---+---+----+----+\n|          Mazda RX4|  21|  6|  160|110| 3.9| 2.62|16.46|  0|  1|   4|   4|\n|      Mazda RX4 Wag|  21|  6|  160|110| 3.9|2.875|17.02|  0|  1|   4|   4|\n|         Datsun 710|22.8|  4|  108| 93|3.85| 2.32|18.61|  1|  1|   4|   1|\n|     Hornet 4 Drive|21.4|  6|  258|110|3.08|3.215|19.44|  1|  0|   3|   1|\n|  Hornet Sportabout|18.7|  8|  360|175|3.15| 3.44|17.02|  0|  0|   3|   2|\n|            Valiant|18.1|  6|  225|105|2.76| 3.46|20.22|  1|  0|   3|   1|\n|         Duster 360|14.3|  8|  360|245|3.21| 3.57|15.84|  0|  0|   3|   4|\n|          Merc 240D|24.4|  4|146.7| 62|3.69| 3.19|   20|  1|  0|   4|   2|\n|           Merc 230|22.8|  4|140.8| 95|3.92| 3.15| 22.9|  1|  0|   4|   2|\n|           Merc 280|19.2|  6|167.6|123|3.92| 3.44| 18.3|  1|  0|   4|   4|\n|          Merc 280C|17.8|  6|167.6|123|3.92| 3.44| 18.9|  1|  0|   4|   4|\n|         Merc 450SE|16.4|  8|275.8|180|3.07| 4.07| 17.4|  0|  0|   3|   3|\n|         Merc 450SL|17.3|  8|275.8|180|3.07| 3.73| 17.6|  0|  0|   3|   3|\n|        Merc 450SLC|15.2|  8|275.8|180|3.07| 3.78|   18|  0|  0|   3|   3|\n| Cadillac Fleetwood|10.4|  8|  472|205|2.93| 5.25|17.98|  0|  0|   3|   4|\n|Lincoln Continental|10.4|  8|  460|215|   3|5.424|17.82|  0|  0|   3|   4|\n|  Chrysler Imperial|14.7|  8|  440|230|3.23|5.345|17.42|  0|  0|   3|   4|\n|           Fiat 128|32.4|  4| 78.7| 66|4.08|  2.2|19.47|  1|  1|   4|   1|\n|        Honda Civic|30.4|  4| 75.7| 52|4.93|1.615|18.52|  1|  1|   4|   2|\n|     Toyota Corolla|33.9|  4| 71.1| 65|4.22|1.835| 19.9|  1|  1|   4|   1|\n+-------------------+----+---+-----+---+----+-----+-----+---+---+----+----+\nonly showing top 20 rows\n\nroot\n |-- model: string (nullable = true)\n |-- mpg: string (nullable = true)\n |-- cyl: string (nullable = true)\n |-- disp: string (nullable = true)\n |-- hp: string (nullable = true)\n |-- drat: string (nullable = true)\n |-- wt: string (nullable = true)\n |-- qsec: string (nullable = true)\n |-- vs: string (nullable = true)\n |-- am: string (nullable = true)\n |-- gear: string (nullable = true)\n |-- carb: string (nullable = true)\n\n+-------+-----------+------------------+------------------+------------------+-----------------+------------------+------------------+------------------+------------------+-------------------+------------------+------------------+\n|summary|      model|               mpg|               cyl|              disp|               hp|              drat|                wt|              qsec|                vs|                 am|              gear|              carb|\n+-------+-----------+------------------+------------------+------------------+-----------------+------------------+------------------+------------------+------------------+-------------------+------------------+------------------+\n|  count|         32|                32|                32|                32|               32|                32|                32|                32|                32|                 32|                32|                32|\n|   mean|       null|20.090624999999996|            6.1875|230.72187500000004|         146.6875|3.5965625000000006|3.2172499999999995|17.848750000000003|            0.4375|            0.40625|            3.6875|            2.8125|\n| stddev|       null| 6.026948052089103|1.7859216469465444|123.93869383138195|68.56286848932059|0.5346787360709716|0.9784574429896968|1.7869432360968436|0.5040161287741853|0.49899091723584604|0.7378040652569471|1.6151999776318522|\n|    min|AMC Javelin|              10.4|                 4|               108|              105|              2.76|             1.513|              14.5|                 0|                  0|                 3|                 1|\n|    max| Volvo 142E|              33.9|                 8|              95.1|               97|              4.93|             5.424|              22.9|                 1|                  1|                 5|                 8|\n+-------+-----------+------------------+------------------+------------------+-----------------+------------------+------------------+------------------+------------------+-------------------+------------------+------------------+\n\n+-------+------------------+\n|summary|               mpg|\n+-------+------------------+\n|  count|                32|\n|   mean|20.090624999999996|\n| stddev| 6.026948052089103|\n|    min|              10.4|\n|    max|              33.9|\n+-------+------------------+\n\n"}]},"apps":[],"jobName":"paragraph_1493907585825_-129618206","id":"20170503-211105_1236025868","dateCreated":"2017-05-04T09:19:45-0500","dateStarted":"2017-05-04T14:47:08-0500","dateFinished":"2017-05-04T14:47:31-0500","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:12390"},{"title":"Read and Write with DataFrame","text":"%spark\n//val df=spark.read.format(\"csv\").option(\"header\", true).load(\"/tmp/data/mtcars.csv\")\ndf.show(100)\ndf.write.format(\"json\").mode(\"overwrite\").save(\"cars.json\")\ndf.write.parquet(\"cars.parquet\")\ndf.write.option(\"delimiter\",\"\\t\").csv(\"cars.tab\")\nval df_json = spark.read.json(\"cars.json\")\nval df_parquet = spark.read.parquet(\"cars.parquet\")\ndf_json.show\ndf_parquet.show","user":"xwj","dateUpdated":"2017-05-04T11:07:06-0500","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true,"editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------------------+----+---+-----+---+----+-----+-----+---+---+----+----+\n|              model| mpg|cyl| disp| hp|drat|   wt| qsec| vs| am|gear|carb|\n+-------------------+----+---+-----+---+----+-----+-----+---+---+----+----+\n|          Mazda RX4|  21|  6|  160|110| 3.9| 2.62|16.46|  0|  1|   4|   4|\n|      Mazda RX4 Wag|  21|  6|  160|110| 3.9|2.875|17.02|  0|  1|   4|   4|\n|         Datsun 710|22.8|  4|  108| 93|3.85| 2.32|18.61|  1|  1|   4|   1|\n|     Hornet 4 Drive|21.4|  6|  258|110|3.08|3.215|19.44|  1|  0|   3|   1|\n|  Hornet Sportabout|18.7|  8|  360|175|3.15| 3.44|17.02|  0|  0|   3|   2|\n|            Valiant|18.1|  6|  225|105|2.76| 3.46|20.22|  1|  0|   3|   1|\n|         Duster 360|14.3|  8|  360|245|3.21| 3.57|15.84|  0|  0|   3|   4|\n|          Merc 240D|24.4|  4|146.7| 62|3.69| 3.19|   20|  1|  0|   4|   2|\n|           Merc 230|22.8|  4|140.8| 95|3.92| 3.15| 22.9|  1|  0|   4|   2|\n|           Merc 280|19.2|  6|167.6|123|3.92| 3.44| 18.3|  1|  0|   4|   4|\n|          Merc 280C|17.8|  6|167.6|123|3.92| 3.44| 18.9|  1|  0|   4|   4|\n|         Merc 450SE|16.4|  8|275.8|180|3.07| 4.07| 17.4|  0|  0|   3|   3|\n|         Merc 450SL|17.3|  8|275.8|180|3.07| 3.73| 17.6|  0|  0|   3|   3|\n|        Merc 450SLC|15.2|  8|275.8|180|3.07| 3.78|   18|  0|  0|   3|   3|\n| Cadillac Fleetwood|10.4|  8|  472|205|2.93| 5.25|17.98|  0|  0|   3|   4|\n|Lincoln Continental|10.4|  8|  460|215|   3|5.424|17.82|  0|  0|   3|   4|\n|  Chrysler Imperial|14.7|  8|  440|230|3.23|5.345|17.42|  0|  0|   3|   4|\n|           Fiat 128|32.4|  4| 78.7| 66|4.08|  2.2|19.47|  1|  1|   4|   1|\n|        Honda Civic|30.4|  4| 75.7| 52|4.93|1.615|18.52|  1|  1|   4|   2|\n|     Toyota Corolla|33.9|  4| 71.1| 65|4.22|1.835| 19.9|  1|  1|   4|   1|\n|      Toyota Corona|21.5|  4|120.1| 97| 3.7|2.465|20.01|  1|  0|   3|   1|\n|   Dodge Challenger|15.5|  8|  318|150|2.76| 3.52|16.87|  0|  0|   3|   2|\n|        AMC Javelin|15.2|  8|  304|150|3.15|3.435| 17.3|  0|  0|   3|   2|\n|         Camaro Z28|13.3|  8|  350|245|3.73| 3.84|15.41|  0|  0|   3|   4|\n|   Pontiac Firebird|19.2|  8|  400|175|3.08|3.845|17.05|  0|  0|   3|   2|\n|          Fiat X1-9|27.3|  4|   79| 66|4.08|1.935| 18.9|  1|  1|   4|   1|\n|      Porsche 914-2|  26|  4|120.3| 91|4.43| 2.14| 16.7|  0|  1|   5|   2|\n|       Lotus Europa|30.4|  4| 95.1|113|3.77|1.513| 16.9|  1|  1|   5|   2|\n|     Ford Pantera L|15.8|  8|  351|264|4.22| 3.17| 14.5|  0|  1|   5|   4|\n|       Ferrari Dino|19.7|  6|  145|175|3.62| 2.77| 15.5|  0|  1|   5|   6|\n|      Maserati Bora|  15|  8|  301|335|3.54| 3.57| 14.6|  0|  1|   5|   8|\n|         Volvo 142E|21.4|  4|  121|109|4.11| 2.78| 18.6|  1|  1|   4|   2|\n+-------------------+----+---+-----+---+----+-----+-----+---+---+----+----+\n\n\ndf_json: org.apache.spark.sql.DataFrame = [am: string, carb: string ... 10 more fields]\n\ndf_parquet: org.apache.spark.sql.DataFrame = [model: string, mpg: string ... 10 more fields]\n+---+----+---+-----+----+----+---+-------------------+----+-----+---+-----+\n| am|carb|cyl| disp|drat|gear| hp|              model| mpg| qsec| vs|   wt|\n+---+----+---+-----+----+----+---+-------------------+----+-----+---+-----+\n|  1|   4|  6|  160| 3.9|   4|110|          Mazda RX4|  21|16.46|  0| 2.62|\n|  1|   4|  6|  160| 3.9|   4|110|      Mazda RX4 Wag|  21|17.02|  0|2.875|\n|  1|   1|  4|  108|3.85|   4| 93|         Datsun 710|22.8|18.61|  1| 2.32|\n|  0|   1|  6|  258|3.08|   3|110|     Hornet 4 Drive|21.4|19.44|  1|3.215|\n|  0|   2|  8|  360|3.15|   3|175|  Hornet Sportabout|18.7|17.02|  0| 3.44|\n|  0|   1|  6|  225|2.76|   3|105|            Valiant|18.1|20.22|  1| 3.46|\n|  0|   4|  8|  360|3.21|   3|245|         Duster 360|14.3|15.84|  0| 3.57|\n|  0|   2|  4|146.7|3.69|   4| 62|          Merc 240D|24.4|   20|  1| 3.19|\n|  0|   2|  4|140.8|3.92|   4| 95|           Merc 230|22.8| 22.9|  1| 3.15|\n|  0|   4|  6|167.6|3.92|   4|123|           Merc 280|19.2| 18.3|  1| 3.44|\n|  0|   4|  6|167.6|3.92|   4|123|          Merc 280C|17.8| 18.9|  1| 3.44|\n|  0|   3|  8|275.8|3.07|   3|180|         Merc 450SE|16.4| 17.4|  0| 4.07|\n|  0|   3|  8|275.8|3.07|   3|180|         Merc 450SL|17.3| 17.6|  0| 3.73|\n|  0|   3|  8|275.8|3.07|   3|180|        Merc 450SLC|15.2|   18|  0| 3.78|\n|  0|   4|  8|  472|2.93|   3|205| Cadillac Fleetwood|10.4|17.98|  0| 5.25|\n|  0|   4|  8|  460|   3|   3|215|Lincoln Continental|10.4|17.82|  0|5.424|\n|  0|   4|  8|  440|3.23|   3|230|  Chrysler Imperial|14.7|17.42|  0|5.345|\n|  1|   1|  4| 78.7|4.08|   4| 66|           Fiat 128|32.4|19.47|  1|  2.2|\n|  1|   2|  4| 75.7|4.93|   4| 52|        Honda Civic|30.4|18.52|  1|1.615|\n|  1|   1|  4| 71.1|4.22|   4| 65|     Toyota Corolla|33.9| 19.9|  1|1.835|\n+---+----+---+-----+----+----+---+-------------------+----+-----+---+-----+\nonly showing top 20 rows\n\n+-------------------+----+---+-----+---+----+-----+-----+---+---+----+----+\n|              model| mpg|cyl| disp| hp|drat|   wt| qsec| vs| am|gear|carb|\n+-------------------+----+---+-----+---+----+-----+-----+---+---+----+----+\n|          Mazda RX4|  21|  6|  160|110| 3.9| 2.62|16.46|  0|  1|   4|   4|\n|      Mazda RX4 Wag|  21|  6|  160|110| 3.9|2.875|17.02|  0|  1|   4|   4|\n|         Datsun 710|22.8|  4|  108| 93|3.85| 2.32|18.61|  1|  1|   4|   1|\n|     Hornet 4 Drive|21.4|  6|  258|110|3.08|3.215|19.44|  1|  0|   3|   1|\n|  Hornet Sportabout|18.7|  8|  360|175|3.15| 3.44|17.02|  0|  0|   3|   2|\n|            Valiant|18.1|  6|  225|105|2.76| 3.46|20.22|  1|  0|   3|   1|\n|         Duster 360|14.3|  8|  360|245|3.21| 3.57|15.84|  0|  0|   3|   4|\n|          Merc 240D|24.4|  4|146.7| 62|3.69| 3.19|   20|  1|  0|   4|   2|\n|           Merc 230|22.8|  4|140.8| 95|3.92| 3.15| 22.9|  1|  0|   4|   2|\n|           Merc 280|19.2|  6|167.6|123|3.92| 3.44| 18.3|  1|  0|   4|   4|\n|          Merc 280C|17.8|  6|167.6|123|3.92| 3.44| 18.9|  1|  0|   4|   4|\n|         Merc 450SE|16.4|  8|275.8|180|3.07| 4.07| 17.4|  0|  0|   3|   3|\n|         Merc 450SL|17.3|  8|275.8|180|3.07| 3.73| 17.6|  0|  0|   3|   3|\n|        Merc 450SLC|15.2|  8|275.8|180|3.07| 3.78|   18|  0|  0|   3|   3|\n| Cadillac Fleetwood|10.4|  8|  472|205|2.93| 5.25|17.98|  0|  0|   3|   4|\n|Lincoln Continental|10.4|  8|  460|215|   3|5.424|17.82|  0|  0|   3|   4|\n|  Chrysler Imperial|14.7|  8|  440|230|3.23|5.345|17.42|  0|  0|   3|   4|\n|           Fiat 128|32.4|  4| 78.7| 66|4.08|  2.2|19.47|  1|  1|   4|   1|\n|        Honda Civic|30.4|  4| 75.7| 52|4.93|1.615|18.52|  1|  1|   4|   2|\n|     Toyota Corolla|33.9|  4| 71.1| 65|4.22|1.835| 19.9|  1|  1|   4|   1|\n+-------------------+----+---+-----+---+----+-----+-----+---+---+----+----+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1493907585861_-143469167","id":"20170503-234457_749150403","dateCreated":"2017-05-04T09:19:45-0500","dateStarted":"2017-05-04T11:07:07-0500","dateFinished":"2017-05-04T11:07:45-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12391"},{"title":"RDD vs. Dataset Vs. DataFrame","text":"\nval rdd = sc.parallelize(0 until 100)\nval rdd_df =rdd.toDF\nval rdd_ds = rdd.toDS\n\nrdd.filter (_ < 10).collect\nrdd_df.filter(\"value < 10\").show\nrdd_ds.filter(\"value < 10\").show\nrdd_ds.filter(_ < 10).show\n\nrdd.map(_ * 2).collect\nrdd_ds.map(_ * 2).show\nrdd_df.map(_ * 2).show //this line will fail \nrdd_df.select('value * 2).show \n","dateUpdated":"2017-05-04T11:00:05-0500","config":{"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","title":true,"results":{},"enabled":true,"editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport org.apache.spark.sql.types.StructType\n\nrdd: org.apache.spark.rdd.RDD[Int] = ParallelCollectionRDD[345] at parallelize at <console>:47\n\nrdd_df: org.apache.spark.sql.DataFrame = [value: int]\n\nrdd_ds: org.apache.spark.sql.Dataset[Int] = [value: int]\n\nres191: Array[Int] = Array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)\n+-----+\n|value|\n+-----+\n|    0|\n|    1|\n|    2|\n|    3|\n|    4|\n|    5|\n|    6|\n|    7|\n|    8|\n|    9|\n+-----+\n\n+-----+\n|value|\n+-----+\n|    0|\n|    1|\n|    2|\n|    3|\n|    4|\n|    5|\n|    6|\n|    7|\n|    8|\n|    9|\n+-----+\n\n+-----+\n|value|\n+-----+\n|    0|\n|    1|\n|    2|\n|    3|\n|    4|\n|    5|\n|    6|\n|    7|\n|    8|\n|    9|\n+-----+\n\n\nres195: Array[Int] = Array(0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198)\n+-----+\n|value|\n+-----+\n|    0|\n|    2|\n|    4|\n|    6|\n|    8|\n|   10|\n|   12|\n|   14|\n|   16|\n|   18|\n|   20|\n|   22|\n|   24|\n|   26|\n|   28|\n|   30|\n|   32|\n|   34|\n|   36|\n|   38|\n+-----+\nonly showing top 20 rows\n\n+-----------+\n|(value * 2)|\n+-----------+\n|          0|\n|          2|\n|          4|\n|          6|\n|          8|\n|         10|\n|         12|\n|         14|\n|         16|\n|         18|\n|         20|\n|         22|\n|         24|\n|         26|\n|         28|\n|         30|\n|         32|\n|         34|\n|         36|\n|         38|\n+-----------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1493907585866_-143853916","id":"20170503-211219_2086974375","dateCreated":"2017-05-04T09:19:45-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:12392"},{"title":"RDD to DataFrame","text":"%spark\nval rdd = sc.parallelize(0 until 10000)\nval simple_rdd_df = rdd.toDF\nsimple_rdd_df.show\n\ncase class Person(id: Int, name: String)\nval person = sc.parallelize(Seq( Person(1, \"Mike\"), \n                                 Person(2, \"Smith\"), \n                                 Person(3, \"Brooke\")))\nval person_df = person.toDF\nperson_df.show ","user":"xwj","dateUpdated":"2017-05-04T11:26:43-0500","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true,"editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nrdd: org.apache.spark.rdd.RDD[Int] = ParallelCollectionRDD[209] at parallelize at <console>:68\n\nsimple_rdd_df: org.apache.spark.sql.DataFrame = [value: int]\n+-----+\n|value|\n+-----+\n|    0|\n|    1|\n|    2|\n|    3|\n|    4|\n|    5|\n|    6|\n|    7|\n|    8|\n|    9|\n|   10|\n|   11|\n|   12|\n|   13|\n|   14|\n|   15|\n|   16|\n|   17|\n|   18|\n|   19|\n+-----+\nonly showing top 20 rows\n\n\ndefined class Person\n\nperson: org.apache.spark.rdd.RDD[Person] = ParallelCollectionRDD[213] at parallelize at <console>:70\n\nperson_df: org.apache.spark.sql.DataFrame = [id: int, name: string]\n+---+------+\n| id|  name|\n+---+------+\n|  1|  Mike|\n|  2| Smith|\n|  3|Brooke|\n+---+------+\n\n"}]},"apps":[],"jobName":"paragraph_1493907585872_-135389440","id":"20170504-015551_1853969066","dateCreated":"2017-05-04T09:19:45-0500","dateStarted":"2017-05-04T11:26:43-0500","dateFinished":"2017-05-04T11:27:00-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12393"},{"title":"SparkSQL Basic ","text":"df.select(\"model\",\"mpg\", \"wt\").show\ndf.select($\"model\", $\"mpg\" * 1.6).show\ndf.select(\"model\",\"mpg\", \"wt\", \"cyl\")\n  .filter(\"cyl > 4\").show\ndf.groupBy(\"cyl\").count().show\n","dateUpdated":"2017-05-04T09:59:37-0500","config":{"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","title":true,"results":{},"enabled":true,"editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------------------+----+-----+\n|              model| mpg|   wt|\n+-------------------+----+-----+\n|          Mazda RX4|  21| 2.62|\n|      Mazda RX4 Wag|  21|2.875|\n|         Datsun 710|22.8| 2.32|\n|     Hornet 4 Drive|21.4|3.215|\n|  Hornet Sportabout|18.7| 3.44|\n|            Valiant|18.1| 3.46|\n|         Duster 360|14.3| 3.57|\n|          Merc 240D|24.4| 3.19|\n|           Merc 230|22.8| 3.15|\n|           Merc 280|19.2| 3.44|\n|          Merc 280C|17.8| 3.44|\n|         Merc 450SE|16.4| 4.07|\n|         Merc 450SL|17.3| 3.73|\n|        Merc 450SLC|15.2| 3.78|\n| Cadillac Fleetwood|10.4| 5.25|\n|Lincoln Continental|10.4|5.424|\n|  Chrysler Imperial|14.7|5.345|\n|           Fiat 128|32.4|  2.2|\n|        Honda Civic|30.4|1.615|\n|     Toyota Corolla|33.9|1.835|\n+-------------------+----+-----+\nonly showing top 20 rows\n\n+-------------------+------------------+\n|              model|       (mpg * 1.6)|\n+-------------------+------------------+\n|          Mazda RX4|              33.6|\n|      Mazda RX4 Wag|              33.6|\n|         Datsun 710|36.480000000000004|\n|     Hornet 4 Drive|             34.24|\n|  Hornet Sportabout|             29.92|\n|            Valiant|28.960000000000004|\n|         Duster 360|22.880000000000003|\n|          Merc 240D|             39.04|\n|           Merc 230|36.480000000000004|\n|           Merc 280|             30.72|\n|          Merc 280C|28.480000000000004|\n|         Merc 450SE|             26.24|\n|         Merc 450SL|27.680000000000003|\n|        Merc 450SLC|             24.32|\n| Cadillac Fleetwood|             16.64|\n|Lincoln Continental|             16.64|\n|  Chrysler Imperial|             23.52|\n|           Fiat 128|             51.84|\n|        Honda Civic|             48.64|\n|     Toyota Corolla|             54.24|\n+-------------------+------------------+\nonly showing top 20 rows\n\n+-------------------+----+-----+---+\n|              model| mpg|   wt|cyl|\n+-------------------+----+-----+---+\n|          Mazda RX4|  21| 2.62|  6|\n|      Mazda RX4 Wag|  21|2.875|  6|\n|     Hornet 4 Drive|21.4|3.215|  6|\n|  Hornet Sportabout|18.7| 3.44|  8|\n|            Valiant|18.1| 3.46|  6|\n|         Duster 360|14.3| 3.57|  8|\n|           Merc 280|19.2| 3.44|  6|\n|          Merc 280C|17.8| 3.44|  6|\n|         Merc 450SE|16.4| 4.07|  8|\n|         Merc 450SL|17.3| 3.73|  8|\n|        Merc 450SLC|15.2| 3.78|  8|\n| Cadillac Fleetwood|10.4| 5.25|  8|\n|Lincoln Continental|10.4|5.424|  8|\n|  Chrysler Imperial|14.7|5.345|  8|\n|   Dodge Challenger|15.5| 3.52|  8|\n|        AMC Javelin|15.2|3.435|  8|\n|         Camaro Z28|13.3| 3.84|  8|\n|   Pontiac Firebird|19.2|3.845|  8|\n|     Ford Pantera L|15.8| 3.17|  8|\n|       Ferrari Dino|19.7| 2.77|  6|\n+-------------------+----+-----+---+\nonly showing top 20 rows\n\n+---+-----+\n|cyl|count|\n+---+-----+\n|  8|   14|\n|  6|    7|\n|  4|   11|\n+---+-----+\n\n"}]},"apps":[],"jobName":"paragraph_1493907585832_-132311449","id":"20170504-035739_1672506467","dateCreated":"2017-05-04T09:19:45-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:12394"},{"title":"Running SQL Statement","text":"df.createOrReplaceTempView(\"cars\")\nspark.sql(\"SELECT * FROM cars WHERE cyl = 6\")\n     .show\nspark.sql(\"SELECT cyl, avg(mpg) as avg_mpg, count(1) as count \"+\n          \"from cars \"+\n          \"group by cyl\")\n     .show","dateUpdated":"2017-05-04T09:59:40-0500","config":{"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","title":true,"results":{},"enabled":true,"editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------+----+---+-----+---+----+-----+-----+---+---+----+----+\n|         model| mpg|cyl| disp| hp|drat|   wt| qsec| vs| am|gear|carb|\n+--------------+----+---+-----+---+----+-----+-----+---+---+----+----+\n|     Mazda RX4|  21|  6|  160|110| 3.9| 2.62|16.46|  0|  1|   4|   4|\n| Mazda RX4 Wag|  21|  6|  160|110| 3.9|2.875|17.02|  0|  1|   4|   4|\n|Hornet 4 Drive|21.4|  6|  258|110|3.08|3.215|19.44|  1|  0|   3|   1|\n|       Valiant|18.1|  6|  225|105|2.76| 3.46|20.22|  1|  0|   3|   1|\n|      Merc 280|19.2|  6|167.6|123|3.92| 3.44| 18.3|  1|  0|   4|   4|\n|     Merc 280C|17.8|  6|167.6|123|3.92| 3.44| 18.9|  1|  0|   4|   4|\n|  Ferrari Dino|19.7|  6|  145|175|3.62| 2.77| 15.5|  0|  1|   5|   6|\n+--------------+----+---+-----+---+----+-----+-----+---+---+----+----+\n\n+---+------------------+-----+\n|cyl|           avg_mpg|count|\n+---+------------------+-----+\n|  8|15.100000000000003|   14|\n|  6| 19.74285714285714|    7|\n|  4|26.663636363636364|   11|\n+---+------------------+-----+\n\n"}]},"apps":[],"jobName":"paragraph_1493907585839_-133465695","id":"20170504-041151_202712030","dateCreated":"2017-05-04T09:19:45-0500","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:12395"},{"title":"Using DataFrame for analysis example","text":"%spark\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.ml.classification.LogisticRegression\nimport org.apache.spark.ml.feature.VectorAssembler\nimport org.apache.spark.ml.Pipeline\n\nval cars = spark.read.format(\"csv\").option(\"header\", true).load(\"/tmp/data/mtcars.csv\")\n                .selectExpr(\"model\", \"mpg + 0.0 as mpg\", \"disp + 0.0 as disp\", \n                            \"hp + 0.0 as hp\", \"drat + 0.0 as drat\", \"wt + 0.0 as wt\", \n                            \"cyl + 0.0 as label\")\n                \nval training= cars.sample(false, 0.8)\nval test= cars.except(training)\n\nval assembler = new VectorAssembler()\n  .setInputCols(Array(\"mpg\", \"disp\", \"hp\", \"drat\", \"wt\"))\n  .setOutputCol(\"features\")\n  \nval lr = new LogisticRegression()\n  .setMaxIter(10)\n  .setRegParam(0.2)\n  .setElasticNetParam(0.0)\n\nval pipeline = new Pipeline().setStages(Array(assembler, lr))\nval lrModel = pipeline.fit(training)\n\nval result = lrModel.transform(test).select('model, 'label, 'prediction)\nresult.show","user":"xwj","dateUpdated":"2017-05-04T11:27:27-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala","title":true,"editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport org.apache.spark.sql.functions._\n\nimport org.apache.spark.ml.classification.LogisticRegression\n\nimport org.apache.spark.ml.feature.VectorAssembler\n\nimport org.apache.spark.ml.Pipeline\n\ncars: org.apache.spark.sql.DataFrame = [model: string, mpg: double ... 5 more fields]\n\ntraining: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [model: string, mpg: double ... 5 more fields]\n\ntest: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [model: string, mpg: double ... 5 more fields]\n\nassembler: org.apache.spark.ml.feature.VectorAssembler = vecAssembler_fd0df30220fa\n\nlr: org.apache.spark.ml.classification.LogisticRegression = logreg_4bdc5115a32e\n\npipeline: org.apache.spark.ml.Pipeline = pipeline_4a5fc4f0cbf2\n\nlrModel: org.apache.spark.ml.PipelineModel = pipeline_4a5fc4f0cbf2\n\nresult: org.apache.spark.sql.DataFrame = [model: string, label: double ... 1 more field]\n+--------------+-----+----------+\n|         model|label|prediction|\n+--------------+-----+----------+\n|     Merc 240D|  4.0|       4.0|\n|  Ferrari Dino|  6.0|       4.0|\n|Ford Pantera L|  8.0|       8.0|\n|  Lotus Europa|  4.0|       4.0|\n+--------------+-----+----------+\n\n"}]},"apps":[],"jobName":"paragraph_1493913642937_779510783","id":"20170504-110042_185806567","dateCreated":"2017-05-04T11:00:42-0500","dateStarted":"2017-05-04T11:27:27-0500","dateFinished":"2017-05-04T11:27:49-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12396"},{"title":"Zeppelin Feature","text":"%spark\nz.show(df.describe())\n","user":"xwj","dateUpdated":"2017-05-04T10:57:45-0500","config":{"colWidth":12,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":208,"optionOpen":true,"setting":{"pieChart":{},"lineChart":{"forceY":true}},"commonSetting":{},"keys":[{"name":"mpg","index":2,"aggr":"sum"}],"groups":[{"name":"summary","index":0,"aggr":"sum"}],"values":[{"name":"hp","index":5,"aggr":"sum"}]},"helium":{}}},"editorSetting":{"language":"scala","editOnDblClick":true},"editorMode":"ace/mode/scala","editorHide":false,"tableHide":false,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"summary\tmodel\tmpg\tcyl\tdisp\thp\tdrat\twt\tqsec\tvs\tam\tgear\tcarb\ncount\t32\t32\t32\t32\t32\t32\t32\t32\t32\t32\t32\t32\nmean\tnull\t20.090624999999996\t6.1875\t230.72187500000004\t146.6875\t3.5965625000000006\t3.2172499999999995\t17.848750000000003\t0.4375\t0.40625\t3.6875\t2.8125\nstddev\tnull\t6.026948052089103\t1.7859216469465444\t123.93869383138195\t68.56286848932059\t0.5346787360709716\t0.9784574429896968\t1.7869432360968436\t0.5040161287741853\t0.49899091723584604\t0.7378040652569471\t1.6151999776318522\nmin\tAMC Javelin\t10.4\t4\t108\t105\t2.76\t1.513\t14.5\t0\t0\t3\t1\nmax\tVolvo 142E\t33.9\t8\t95.1\t97\t4.93\t5.424\t22.9\t1\t1\t5\t8\n"}]},"apps":[],"jobName":"paragraph_1493912197619_1028007143","id":"20170504-103637_2082386083","dateCreated":"2017-05-04T10:36:37-0500","dateStarted":"2017-05-04T10:36:57-0500","dateFinished":"2017-05-04T10:37:15-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12397"},{"title":"Zeppelin Visualization","text":"%spark\nz.show(df)","user":"xwj","dateUpdated":"2017-05-04T10:58:36-0500","config":{"colWidth":12,"enabled":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":true,"setting":{"lineChart":{},"multiBarChart":{}},"commonSetting":{},"keys":[{"name":"cyl","index":2,"aggr":"sum"}],"groups":[{"name":"model","index":0,"aggr":"sum"}],"values":[{"name":"mpg","index":1,"aggr":"avg"}]},"helium":{}}},"editorSetting":{"language":"scala","editOnDblClick":true},"editorMode":"ace/mode/scala","editorHide":false,"tableHide":false,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"model\tmpg\tcyl\tdisp\thp\tdrat\twt\tqsec\tvs\tam\tgear\tcarb\nMazda RX4\t21\t6\t160\t110\t3.9\t2.62\t16.46\t0\t1\t4\t4\nMazda RX4 Wag\t21\t6\t160\t110\t3.9\t2.875\t17.02\t0\t1\t4\t4\nDatsun 710\t22.8\t4\t108\t93\t3.85\t2.32\t18.61\t1\t1\t4\t1\nHornet 4 Drive\t21.4\t6\t258\t110\t3.08\t3.215\t19.44\t1\t0\t3\t1\nHornet Sportabout\t18.7\t8\t360\t175\t3.15\t3.44\t17.02\t0\t0\t3\t2\nValiant\t18.1\t6\t225\t105\t2.76\t3.46\t20.22\t1\t0\t3\t1\nDuster 360\t14.3\t8\t360\t245\t3.21\t3.57\t15.84\t0\t0\t3\t4\nMerc 240D\t24.4\t4\t146.7\t62\t3.69\t3.19\t20\t1\t0\t4\t2\nMerc 230\t22.8\t4\t140.8\t95\t3.92\t3.15\t22.9\t1\t0\t4\t2\nMerc 280\t19.2\t6\t167.6\t123\t3.92\t3.44\t18.3\t1\t0\t4\t4\nMerc 280C\t17.8\t6\t167.6\t123\t3.92\t3.44\t18.9\t1\t0\t4\t4\nMerc 450SE\t16.4\t8\t275.8\t180\t3.07\t4.07\t17.4\t0\t0\t3\t3\nMerc 450SL\t17.3\t8\t275.8\t180\t3.07\t3.73\t17.6\t0\t0\t3\t3\nMerc 450SLC\t15.2\t8\t275.8\t180\t3.07\t3.78\t18\t0\t0\t3\t3\nCadillac Fleetwood\t10.4\t8\t472\t205\t2.93\t5.25\t17.98\t0\t0\t3\t4\nLincoln Continental\t10.4\t8\t460\t215\t3\t5.424\t17.82\t0\t0\t3\t4\nChrysler Imperial\t14.7\t8\t440\t230\t3.23\t5.345\t17.42\t0\t0\t3\t4\nFiat 128\t32.4\t4\t78.7\t66\t4.08\t2.2\t19.47\t1\t1\t4\t1\nHonda Civic\t30.4\t4\t75.7\t52\t4.93\t1.615\t18.52\t1\t1\t4\t2\nToyota Corolla\t33.9\t4\t71.1\t65\t4.22\t1.835\t19.9\t1\t1\t4\t1\nToyota Corona\t21.5\t4\t120.1\t97\t3.7\t2.465\t20.01\t1\t0\t3\t1\nDodge Challenger\t15.5\t8\t318\t150\t2.76\t3.52\t16.87\t0\t0\t3\t2\nAMC Javelin\t15.2\t8\t304\t150\t3.15\t3.435\t17.3\t0\t0\t3\t2\nCamaro Z28\t13.3\t8\t350\t245\t3.73\t3.84\t15.41\t0\t0\t3\t4\nPontiac Firebird\t19.2\t8\t400\t175\t3.08\t3.845\t17.05\t0\t0\t3\t2\nFiat X1-9\t27.3\t4\t79\t66\t4.08\t1.935\t18.9\t1\t1\t4\t1\nPorsche 914-2\t26\t4\t120.3\t91\t4.43\t2.14\t16.7\t0\t1\t5\t2\nLotus Europa\t30.4\t4\t95.1\t113\t3.77\t1.513\t16.9\t1\t1\t5\t2\nFord Pantera L\t15.8\t8\t351\t264\t4.22\t3.17\t14.5\t0\t1\t5\t4\nFerrari Dino\t19.7\t6\t145\t175\t3.62\t2.77\t15.5\t0\t1\t5\t6\nMaserati Bora\t15\t8\t301\t335\t3.54\t3.57\t14.6\t0\t1\t5\t8\nVolvo 142E\t21.4\t4\t121\t109\t4.11\t2.78\t18.6\t1\t1\t4\t2\n"}]},"apps":[],"jobName":"paragraph_1493912670152_-1868906364","id":"20170504-104430_1075235563","dateCreated":"2017-05-04T10:44:30-0500","dateStarted":"2017-05-04T10:44:47-0500","dateFinished":"2017-05-04T10:44:56-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12398"},{"title":"Single Variable Linear Regression","text":"%spark\nimport org.apache.spark.mllib.linalg._\nimport org.apache.spark.mllib.regression.LabeledPoint\nimport org.apache.spark.mllib.regression.LinearRegressionWithSGD\n\nval lines = sc.textFile(\"/tmp/data/scaled-sf-ny-housing-train.csv\")\nval data = lines.map(l => {\n  val w = l.split(\",\")\n  LabeledPoint(w(3).toDouble, Vectors.dense(w(5).toDouble))\n})\nval model = LinearRegressionWithSGD.train(data,100)\n\nmodel.weights\n\nval trainError = lines.map(l => {\n  val w = l.split(\",\")\n  model.predict(Vectors.dense(w(5).toDouble))-w(3).toDouble\n})\nval mseTrain = trainError.map(x=>x*x).reduce(_+_)/400\nmseTrain\n//mseTrain: Double = 0.06472201882476669\n\nval tlines = sc.textFile(\"/tmp/data/scaled-sf-ny-housing-test.csv\")\nval testError = tlines.map(l => {\n  val w = l.split(\",\")\n  model.predict(Vectors.dense(w(5).toDouble))-w(3).toDouble\n})\nval mseTest = testError.map(x=>x*x).reduce(_+_)/92\nmseTest","user":"xwj","dateUpdated":"2017-05-04T15:00:00-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":true},"editorMode":"ace/mode/scala","editorHide":false,"tableHide":false,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport org.apache.spark.mllib.linalg._\n\nimport org.apache.spark.mllib.regression.LabeledPoint\n\nimport org.apache.spark.mllib.regression.LinearRegressionWithSGD\n\nlines: org.apache.spark.rdd.RDD[String] = /tmp/data/scaled-sf-ny-housing-train.csv MapPartitionsRDD[286] at textFile at <console>:79\n\ndata: org.apache.spark.rdd.RDD[org.apache.spark.mllib.regression.LabeledPoint] = MapPartitionsRDD[287] at map at <console>:81\n\nwarning: there was one deprecation warning; re-run with -deprecation for details\n\nmodel: org.apache.spark.mllib.regression.LinearRegressionModel = org.apache.spark.mllib.regression.LinearRegressionModel: intercept = 0.0, numFeatures = 1\n\nres28: org.apache.spark.mllib.linalg.Vector = [0.7266845568452435]\n\ntrainError: org.apache.spark.rdd.RDD[Double] = MapPartitionsRDD[490] at map at <console>:85\n\nmseTrain: Double = 0.06472201882476669\n\nres29: Double = 0.06472201882476669\n\ntlines: org.apache.spark.rdd.RDD[String] = /tmp/data/scaled-sf-ny-housing-test.csv MapPartitionsRDD[493] at textFile at <console>:79\n\ntestError: org.apache.spark.rdd.RDD[Double] = MapPartitionsRDD[494] at map at <console>:87\n\nmseTest: Double = 0.05897075938607083\n\nres30: Double = 0.05897075938607083\n"}]},"apps":[],"jobName":"paragraph_1493927902904_-1991794881","id":"20170504-145822_369155191","dateCreated":"2017-05-04T14:58:22-0500","dateStarted":"2017-05-04T14:58:43-0500","dateFinished":"2017-05-04T14:59:29-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12399"},{"title":"Multiple variables linear regression","text":"%spark\nimport org.apache.spark.mllib.linalg._\nimport org.apache.spark.mllib.regression.LabeledPoint\nimport org.apache.spark.mllib.regression.LinearRegressionWithSGD\n\nval lines = sc.textFile(\"/tmp/data/scaled-sf-ny-housing-train.csv\")\nval data = lines.map(l => {\n  val w = l.split(\",\")\n  LabeledPoint(w(3).toDouble, Vectors.dense(w(5).toDouble, w(4).toDouble, w(1).toDouble))\n})\nval model = LinearRegressionWithSGD.train(data,100)\n\nmodel.weights\n\nval trainError = lines.map(l => {\n  val w = l.split(\",\")\n  model.predict(Vectors.dense(w(5).toDouble, w(4).toDouble, w(1).toDouble))-w(3).toDouble\n})\nval mseTrain = trainError.map(x=>x*x).reduce(_+_)/400\nmseTrain\n//mseTrain: Double = 0.06222798683227797\n\nval tlines = sc.textFile(\"/tmp/data/scaled-sf-ny-housing-test.csv\")\nval testError = tlines.map(l => {\n  val w = l.split(\",\")\n  model.predict(Vectors.dense(w(5).toDouble, w(4).toDouble, w(1).toDouble))-w(3).toDouble\n})\nval mseTest = testError.map(x=>x*x).reduce(_+_)/92\nmseTest","user":"xwj","dateUpdated":"2017-05-04T15:00:15-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1493927923268_-1314389986","id":"20170504-145843_1934030746","dateCreated":"2017-05-04T14:58:43-0500","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:12400"},{"title":"Logistic Regression","text":"%spark\nimport org.apache.spark.mllib.classification.{LogisticRegressionModel, LogisticRegressionWithLBFGS}\nimport org.apache.spark.mllib.evaluation.MulticlassMetrics\nimport org.apache.spark.mllib.linalg._\nimport org.apache.spark.mllib.regression.LabeledPoint\n\nval lines = sc.textFile(\"/tmp/data/scaled-sf-ny-housing-train.csv\")\nval data = lines.map(l => {\n  val w = l.split(\",\")\n  LabeledPoint(w(0).toDouble, Vectors.dense(w(5).toDouble, w(4).toDouble, w(1).toDouble))\n})\nval model = new LogisticRegressionWithLBFGS().setNumClasses(2).run(data)\n\nmodel.weights\n\nval trainPrediction = lines.map(l => {\n  val w = l.split(\",\")\n  (model.predict(Vectors.dense(w(5).toDouble, w(4).toDouble, w(1).toDouble)), w(0).toDouble)\n})\n\nval metrics = new MulticlassMetrics(trainPrediction)\nmetrics.precision\n//res12: Double = 0.6575\n\nval tlines = sc.textFile(\"/tmp/data/scaled-sf-ny-housing-test.csv\")\nval testPrediction = tlines.map(l => {\n  val w = l.split(\",\")\n  (model.predict(Vectors.dense(w(5).toDouble, w(4).toDouble, w(1).toDouble)), w(0).toDouble)\n})\n\nval metrics = new MulticlassMetrics(testPrediction)\nmetrics.precision\n//res12: Double = 0.6956521739130435","user":"xwj","dateUpdated":"2017-05-04T15:01:03-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1493928017919_-875886798","id":"20170504-150017_915312847","dateCreated":"2017-05-04T15:00:17-0500","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:12401"},{"title":"Support Vector Machine","text":"%spark\nimport org.apache.spark.mllib.classification.{SVMModel, SVMWithSGD}\nimport org.apache.spark.mllib.evaluation.MulticlassMetrics\nimport org.apache.spark.mllib.linalg._\nimport org.apache.spark.mllib.regression.LabeledPoint\n\nval lines = sc.textFile(\"/tmp/data/scaled-sf-ny-housing-train.csv\")\nval data = lines.map(l => {\n  val w = l.split(\",\")\n  LabeledPoint(w(0).toDouble, Vectors.dense(w(5).toDouble, w(4).toDouble, w(1).toDouble))\n})\nval model = SVMWithSGD.train(data, 1000)\n\nmodel.weights\n\nval trainPrediction = lines.map(l => {\n  val w = l.split(\",\")\n  (model.predict(Vectors.dense(w(5).toDouble, w(4).toDouble, w(1).toDouble)), w(0).toDouble)\n})\n\nval metrics = new MulticlassMetrics(trainPrediction)\nmetrics.precision\n//> res12: Double = 0.525\n\nval tlines = sc.textFile(\"/tmp/data/scaled-sf-ny-housing-test.csv\")\nval testPrediction = tlines.map(l => {\n  val w = l.split(\",\")\n  (model.predict(Vectors.dense(w(5).toDouble, w(4).toDouble, w(1).toDouble)), w(0).toDouble)\n})\n\nval metrics = new MulticlassMetrics(testPrediction)\nmetrics.precision\n//> res12: Double = 0.6304347826086957","user":"xwj","dateUpdated":"2017-05-04T15:01:47-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1493928066165_629528379","id":"20170504-150106_1823077789","dateCreated":"2017-05-04T15:01:06-0500","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:12402"},{"title":"K-Mean Clustering","text":"%spark\nimport org.apache.spark.mllib.linalg._\nimport org.apache.spark.mllib.clustering.{KMeans, KMeansModel}\n\nval lines = sc.textFile(\"/tmp/spark-training/data/scaled-sf-ny-housing-train.csv\")\n\nval data = lines.map(l => {\n  val w = l.split(\",\")\n  Vectors.dense(w(1).toDouble, w(2).toDouble, w(3).toDouble, w(4).toDouble, w(5).toDouble, w(6).toDouble)\n})\n\nval clusters = KMeans.train(data, 2, 100)\n\nval pred = lines.map(l => {\n  val w = l.split(\",\")\n  val v = Vectors.dense(w(1).toDouble, w(2).toDouble, w(3).toDouble, w(4).toDouble, w(5).toDouble, w(6).toDouble)\n  math.pow(cluster.predict(v) - w(0).toInt, 2)\n})\n\nval res = pred.reduce(_+_)\nres\n//res: Int = 177","user":"xwj","dateUpdated":"2017-05-04T15:06:28-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":true},"editorMode":"ace/mode/scala","title":true,"editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"\nimport org.apache.spark.mllib.linalg._\n\nimport org.apache.spark.mllib.clustering.{KMeans, KMeansModel}\n\nlines: org.apache.spark.rdd.RDD[String] = /tmp/spark-training/data/scaled-sf-ny-housing-train.csv MapPartitionsRDD[497] at textFile at <console>:83\n\ndata: org.apache.spark.rdd.RDD[org.apache.spark.mllib.linalg.Vector] = MapPartitionsRDD[498] at map at <console>:85\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\norg.apache.hadoop.mapred.InvalidInputException: Input path does not exist: hdfs://c252-101.wrangler.tacc.utexas.edu:8020/tmp/spark-training/data/scaled-sf-ny-housing-train.csv\n  at org.apache.hadoop.mapred.FileInputFormat.singleThreadedListStatus(FileInputFormat.java:287)\n  at org.apache.hadoop.mapred.FileInputFormat.listStatus(FileInputFormat.java:229)\n  at org.apache.hadoop.mapred.FileInputFormat.getSplits(FileInputFormat.java:315)\n  at org.apache.spark.rdd.HadoopRDD.getPartitions(HadoopRDD.scala:202)\n  at org.apache.spark.rdd.RDD$$anonfun$partitions$2.apply(RDD.scala:252)\n  at org.apache.spark.rdd.RDD$$anonfun$partitions$2.apply(RDD.scala:250)\n  at scala.Option.getOrElse(Option.scala:121)\n  at org.apache.spark.rdd.RDD.partitions(RDD.scala:250)\n  at org.apache.spark.rdd.MapPartitionsRDD.getPartitions(MapPartitionsRDD.scala:35)\n  at org.apache.spark.rdd.RDD$$anonfun$partitions$2.apply(RDD.scala:252)\n  at org.apache.spark.rdd.RDD$$anonfun$partitions$2.apply(RDD.scala:250)\n  at scala.Option.getOrElse(Option.scala:121)\n  at org.apache.spark.rdd.RDD.partitions(RDD.scala:250)\n  at org.apache.spark.rdd.MapPartitionsRDD.getPartitions(MapPartitionsRDD.scala:35)\n  at org.apache.spark.rdd.RDD$$anonfun$partitions$2.apply(RDD.scala:252)\n  at org.apache.spark.rdd.RDD$$anonfun$partitions$2.apply(RDD.scala:250)\n  at scala.Option.getOrElse(Option.scala:121)\n  at org.apache.spark.rdd.RDD.partitions(RDD.scala:250)\n  at org.apache.spark.rdd.ZippedPartitionsBaseRDD.getPartitions(ZippedPartitionsRDD.scala:55)\n  at org.apache.spark.rdd.RDD$$anonfun$partitions$2.apply(RDD.scala:252)\n  at org.apache.spark.rdd.RDD$$anonfun$partitions$2.apply(RDD.scala:250)\n  at scala.Option.getOrElse(Option.scala:121)\n  at org.apache.spark.rdd.RDD.partitions(RDD.scala:250)\n  at org.apache.spark.rdd.MapPartitionsRDD.getPartitions(MapPartitionsRDD.scala:35)\n  at org.apache.spark.rdd.RDD$$anonfun$partitions$2.apply(RDD.scala:252)\n  at org.apache.spark.rdd.RDD$$anonfun$partitions$2.apply(RDD.scala:250)\n  at scala.Option.getOrElse(Option.scala:121)\n  at org.apache.spark.rdd.RDD.partitions(RDD.scala:250)\n  at org.apache.spark.SparkContext.runJob(SparkContext.scala:1958)\n  at org.apache.spark.rdd.RDD.count(RDD.scala:1157)\n  at org.apache.spark.rdd.RDD$$anonfun$takeSample$1.apply(RDD.scala:567)\n  at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)\n  at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)\n  at org.apache.spark.rdd.RDD.withScope(RDD.scala:362)\n  at org.apache.spark.rdd.RDD.takeSample(RDD.scala:556)\n  at org.apache.spark.mllib.clustering.KMeans.initKMeansParallel(KMeans.scala:353)\n  at org.apache.spark.mllib.clustering.KMeans.runAlgorithm(KMeans.scala:256)\n  at org.apache.spark.mllib.clustering.KMeans.run(KMeans.scala:227)\n  at org.apache.spark.mllib.clustering.KMeans.run(KMeans.scala:209)\n  at org.apache.spark.mllib.clustering.KMeans$.train(KMeans.scala:530)\n  ... 68 elided\n"}]},"apps":[],"jobName":"paragraph_1493928120365_-1447068704","id":"20170504-150200_1626610298","dateCreated":"2017-05-04T15:02:00-0500","dateStarted":"2017-05-04T15:06:08-0500","dateFinished":"2017-05-04T15:06:15-0500","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:12403"},{"title":"PageRank","text":"%spark\nimport org.apache.spark.graphx._\nimport org.apache.spark.graphx.util.GraphGenerators\n\nval graph = GraphLoader.edgeListFile(sc, \"/tmp/data/followers.txt\")\nval ranks = graph.pageRank(0.0001).vertices\nranks.sortBy(_._2, false).collect","user":"xwj","dateUpdated":"2017-05-04T15:07:13-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","title":true,"editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport org.apache.spark.graphx._\n\nimport org.apache.spark.graphx.util.GraphGenerators\n\ngraph: org.apache.spark.graphx.Graph[Int,Int] = org.apache.spark.graphx.impl.GraphImpl@104a9d61\n\nranks: org.apache.spark.graphx.VertexRDD[Double] = VertexRDDImpl[1400] at RDD at VertexRDD.scala:57\n\nres31: Array[(org.apache.spark.graphx.VertexId, Double)] = Array((1,1.4588814096664682), (2,1.390049198216498), (7,1.2973176314422592), (3,0.9993442038507723), (6,0.7013599933629602), (4,0.15))\n"}]},"apps":[],"jobName":"paragraph_1493928117024_1178473114","id":"20170504-150157_979977816","dateCreated":"2017-05-04T15:01:57-0500","dateStarted":"2017-05-04T15:07:13-0500","dateFinished":"2017-05-04T15:08:04-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:12404"},{"text":"%spark\n","user":"xwj","dateUpdated":"2017-05-04T15:06:55-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1493928415312_471900111","id":"20170504-150655_1421697684","dateCreated":"2017-05-04T15:06:55-0500","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:12405"}],"name":"Excerise","id":"2CESGW4FG","angularObjects":{"2CFB35KQT:shared_process":[],"2CFBXWKTR:shared_process":[],"2CES7GY8S:shared_process":[],"2CGM668WU:shared_process":[],"2CGVXREVQ:shared_process":[],"2CHBAWH8C:shared_process":[],"2CJ73CM11:shared_process":[],"2CGX6EWCU:shared_process":[],"2CHU3P4HR:shared_process":[],"2CF714KEB:shared_process":[],"2CH1JJ8WX:shared_process":[],"2CH25GVJF:shared_process":[],"2CG4RQ4RX:shared_process":[],"2CHA1UJ7D:shared_process":[],"2CGQ7FT1S:shared_process":[],"2CHY5BB8Y:shared_process":[],"2CFKVBJ6N:shared_process":[],"2CHKEKEJU:shared_process":[],"2CG56SJWT:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}